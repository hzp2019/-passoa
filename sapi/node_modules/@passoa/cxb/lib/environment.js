'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var os = require("os");
var isIOJS = require('is-iojs');
//let which = require('which');
exports.moduleVersion = require('../package.json').version;
exports.platform = os.platform();
exports.isWin = os.platform() === 'win32';
exports.isLinux = os.platform() === 'linux';
exports.isOSX = os.platform() === 'darwin';
exports.arch = os.arch();
exports.isX86 = os.arch() === 'ia32';
exports.isX64 = os.arch() === 'x64';
exports.isArm = os.arch() === 'arm';
exports.runtime = isIOJS ? 'iojs' : 'node';
exports.runtimeVersion = process.versions.node;
exports.home = process.env[os.platform() === 'win32' ? 'USERPROFILE' : 'HOME'];
exports.EOL = os.EOL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52aXJvbm1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZW52aXJvbm1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOztBQUNiLHVCQUF5QjtBQUN6QixJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDaEMsK0JBQStCO0FBQ3BCLFFBQUEsYUFBYSxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQztBQUNuRCxRQUFBLFFBQVEsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDekIsUUFBQSxLQUFLLEdBQUcsRUFBRSxDQUFDLFFBQVEsRUFBRSxLQUFLLE9BQU8sQ0FBQztBQUNsQyxRQUFBLE9BQU8sR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLEtBQUssT0FBTyxDQUFDO0FBQ3BDLFFBQUEsS0FBSyxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxRQUFRLENBQUM7QUFDbkMsUUFBQSxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ2pCLFFBQUEsS0FBSyxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxNQUFNLENBQUM7QUFDN0IsUUFBQSxLQUFLLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEtBQUssQ0FBQztBQUM1QixRQUFBLEtBQUssR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLEtBQUssS0FBSyxDQUFDO0FBQzVCLFFBQUEsT0FBTyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDbkMsUUFBQSxjQUFjLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7QUFDdkMsUUFBQSxJQUFJLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3ZFLFFBQUEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7XG5sZXQgaXNJT0pTID0gcmVxdWlyZSgnaXMtaW9qcycpO1xuLy9sZXQgd2hpY2ggPSByZXF1aXJlKCd3aGljaCcpO1xuZXhwb3J0IGxldCBtb2R1bGVWZXJzaW9uID0gcmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJykudmVyc2lvbjtcbmV4cG9ydCBsZXQgcGxhdGZvcm0gPSBvcy5wbGF0Zm9ybSgpO1xuZXhwb3J0IGxldCBpc1dpbiA9IG9zLnBsYXRmb3JtKCkgPT09ICd3aW4zMic7XG5leHBvcnQgbGV0IGlzTGludXggPSBvcy5wbGF0Zm9ybSgpID09PSAnbGludXgnO1xuZXhwb3J0IGxldCBpc09TWCA9IG9zLnBsYXRmb3JtKCkgPT09ICdkYXJ3aW4nO1xuZXhwb3J0IGxldCBhcmNoID0gb3MuYXJjaCgpO1xuZXhwb3J0IGxldCBpc1g4NiA9IG9zLmFyY2goKSA9PT0gJ2lhMzInO1xuZXhwb3J0IGxldCBpc1g2NCA9IG9zLmFyY2goKSA9PT0gJ3g2NCc7XG5leHBvcnQgbGV0IGlzQXJtID0gb3MuYXJjaCgpID09PSAnYXJtJztcbmV4cG9ydCBsZXQgcnVudGltZSA9IGlzSU9KUyA/ICdpb2pzJyA6ICdub2RlJztcbmV4cG9ydCBsZXQgcnVudGltZVZlcnNpb24gPSBwcm9jZXNzLnZlcnNpb25zLm5vZGU7XG5leHBvcnQgbGV0IGhvbWUgPSBwcm9jZXNzLmVudltvcy5wbGF0Zm9ybSgpID09PSAnd2luMzInID8gJ1VTRVJQUk9GSUxFJyA6ICdIT01FJ107XG5leHBvcnQgbGV0IEVPTCA9IG9zLkVPTDtcblxuLy8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZW52aXJvbm1lbnQsIHtcbi8vIFx0aXNQb3NpeDoge1xuLy8gXHRcdGdldDogZnVuY3Rpb24oKSB7XG4vLyBcdFx0XHRyZXR1cm4gIXRoaXMuaXNXaW47XG4vLyBcdFx0fVxuLy8gXHR9LFxuLy8gXHRfaXNOaW5qYUF2YWlsYWJsZToge1xuLy8gXHRcdHZhbHVlOiBudWxsLFxuLy8gXHRcdHdyaXRhYmxlOiB0cnVlXG4vLyBcdH0sXG4vLyBcdGlzTmluamFBdmFpbGFibGU6IHtcbi8vIFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuLy8gXHRcdFx0aWYgKHRoaXMuX2lzTmluamFBdmFpbGFibGUgPT09IG51bGwpIHtcbi8vIFx0XHRcdFx0dGhpcy5faXNOaW5qYUF2YWlsYWJsZSA9IGZhbHNlO1xuLy8gXHRcdFx0XHR0cnkge1xuLy8gXHRcdFx0XHRcdGlmICh3aGljaC5zeW5jKCduaW5qYScpKSB7XG4vLyBcdFx0XHRcdFx0XHR0aGlzLl9pc05pbmphQXZhaWxhYmxlID0gdHJ1ZTtcbi8vIFx0XHRcdFx0XHR9XG4vLyBcdFx0XHRcdH0gY2F0Y2ggKGUpIHtcbi8vIFx0XHRcdFx0XHRfLm5vb3AoZSk7XG4vLyBcdFx0XHRcdH1cbi8vIFx0XHRcdH1cbi8vIFx0XHRcdHJldHVybiB0aGlzLl9pc05pbmphQXZhaWxhYmxlO1xuLy8gXHRcdH1cbi8vIFx0fSxcbi8vIFx0X2lzTWFrZUF2YWlsYWJsZToge1xuLy8gXHRcdHZhbHVlOiBudWxsLFxuLy8gXHRcdHdyaXRhYmxlOiB0cnVlXG4vLyBcdH0sXG4vLyBcdGlzTWFrZUF2YWlsYWJsZToge1xuLy8gXHRcdGdldDogZnVuY3Rpb24oKSB7XG4vLyBcdFx0XHRpZiAodGhpcy5faXNNYWtlQXZhaWxhYmxlID09PSBudWxsKSB7XG4vLyBcdFx0XHRcdHRoaXMuX2lzTWFrZUF2YWlsYWJsZSA9IGZhbHNlO1xuLy8gXHRcdFx0XHR0cnkge1xuLy8gXHRcdFx0XHRcdGlmICh3aGljaC5zeW5jKCdtYWtlJykpIHtcbi8vIFx0XHRcdFx0XHRcdHRoaXMuX2lzTWFrZUF2YWlsYWJsZSA9IHRydWU7XG4vLyBcdFx0XHRcdFx0fVxuLy8gXHRcdFx0XHR9IGNhdGNoIChlKSB7XG4vLyBcdFx0XHRcdFx0Xy5ub29wKGUpO1xuLy8gXHRcdFx0XHR9XG4vLyBcdFx0XHR9XG4vLyBcdFx0XHRyZXR1cm4gdGhpcy5faXNNYWtlQXZhaWxhYmxlO1xuLy8gXHRcdH1cbi8vIFx0fSxcbi8vIFx0X2lzR1BQQXZhaWxhYmxlOiB7XG4vLyBcdFx0dmFsdWU6IG51bGwsXG4vLyBcdFx0d3JpdGFibGU6IHRydWVcbi8vIFx0fSxcbi8vIFx0aXNHUFBBdmFpbGFibGU6IHtcbi8vIFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuLy8gXHRcdFx0aWYgKHRoaXMuX2lzR1BQQXZhaWxhYmxlID09PSBudWxsKSB7XG4vLyBcdFx0XHRcdHRoaXMuX2lzR1BQQXZhaWxhYmxlID0gZmFsc2U7XG4vLyBcdFx0XHRcdHRyeSB7XG4vLyBcdFx0XHRcdFx0aWYgKHdoaWNoLnN5bmMoJ2crKycpKSB7XG4vLyBcdFx0XHRcdFx0XHR0aGlzLl9pc0dQUEF2YWlsYWJsZSA9IHRydWU7XG4vLyBcdFx0XHRcdFx0fVxuLy8gXHRcdFx0XHR9IGNhdGNoIChlKSB7XG4vLyBcdFx0XHRcdFx0Xy5ub29wKGUpO1xuLy8gXHRcdFx0XHR9XG4vLyBcdFx0XHR9XG4vLyBcdFx0XHRyZXR1cm4gdGhpcy5faXNHUFBBdmFpbGFibGU7XG4vLyBcdFx0fVxuLy8gXHR9LFxuLy8gXHRfaXNDbGFuZ0F2YWlsYWJsZToge1xuLy8gXHRcdHZhbHVlOiBudWxsLFxuLy8gXHRcdHdyaXRhYmxlOiB0cnVlXG4vLyBcdH0sXG4vLyBcdGlzQ2xhbmdBdmFpbGFibGU6IHtcbi8vIFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuLy8gXHRcdFx0aWYgKHRoaXMuX2lzQ2xhbmdBdmFpbGFibGUgPT09IG51bGwpIHtcbi8vIFx0XHRcdFx0dGhpcy5faXNDbGFuZ0F2YWlsYWJsZSA9IGZhbHNlO1xuLy8gXHRcdFx0XHR0cnkge1xuLy8gXHRcdFx0XHRcdGlmICh3aGljaC5zeW5jKCdjbGFuZysrJykpIHtcbi8vIFx0XHRcdFx0XHRcdHRoaXMuX2lzQ2xhbmdBdmFpbGFibGUgPSB0cnVlO1xuLy8gXHRcdFx0XHRcdH1cbi8vIFx0XHRcdFx0fSBjYXRjaCAoZSkge1xuLy8gXHRcdFx0XHRcdF8ubm9vcChlKTtcbi8vIFx0XHRcdFx0fVxuLy8gXHRcdFx0fVxuLy8gXHRcdFx0cmV0dXJuIHRoaXMuX2lzQ2xhbmdBdmFpbGFibGU7XG4vLyBcdFx0fVxuLy8gXHR9XG4vLyB9KTtcbiJdfQ==